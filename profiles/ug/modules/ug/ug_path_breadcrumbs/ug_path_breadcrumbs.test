<?php

/**
 * @file
 * Tests for ug_path_breadcrumbs.module.
 */

/**
 * Test UG Breadcrumbs feature.
 */
class UGBreadcrumbsTestCase extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'UG Breadcrumbs',
      'description' => 'Test the UG Breadcrumbs feature.',
      'group' => 'UG',
    );
  }

  function setUp() {
    $this->profile = 'ug';
    parent::setup('ug_path_breadcrumbs');
  }

  /**
   * Test news breadcrumb.
   */
  function testNewsBreadcrumb() {
    /* Create a news article. */
    $node1 = $this->drupalCreateNode(array('type' => 'news', 'promote' => 1));
    /* Get the article. */
    $this->drupalGet('node/' . $node1->nid);
    /* Check for breadcrumb link. */
    $this->assertLinkByHref(url('news'));
  }

  /**
   * Test events breadcrumb.
   */
  function testEventsBreadcrumb() {
    /* Create an event. */
    $node1 = $this->drupalCreateNode(array('type' => 'event'));
    /* Get the event. */
    $this->drupalGet('node/' . $node1->nid);
    /* Check for breadcrumb link. */
    $this->assertLinkByHref(url('events'));
  }

  /**
   * Test FAQ breadcrumb.
   */
  function testFaqBreadcrumb() {
    /* Create an node. */
    $node1 = $this->drupalCreateNode(array('type' => 'faq'));
    /* Get the node. */
    $this->drupalGet('node/' . $node1->nid);
    /* Check for breadcrumb link. */
    $this->assertLinkByHref(url('faq'));
  }

  /**
   * Test Services breadcrumb.
   */
  function testServiceBreadcrumb() {
    /* Create an node. */
    $node1 = $this->drupalCreateNode(array('type' => 'service'));
    /* Get the node. */
    $this->drupalGet('node/' . $node1->nid);
    /* Check for breadcrumb link. */
    $this->assertLinkByHref(url('services'));
  }

}

